/* Table Practice */
table,
th,
td{
    border-collapse: collapse;
    padding: 15px;
}
tbody tr{
    border-bottom: 1px solid #ccc;
}
tbody tr:last-child{
    border-bottom: 3px solid #5bbca9;
}
thead {
    background-color: #5bbca9;
    color: #fff;
}
thead tr:first-child{
    background-color: #2e5d54;
    color: #fff;
}
thead tr:first-child th{
    border-top-left-radius: 6px;
}
thead tr:first-child th{
    border-top-right-radius: 6px;
}
/* thead tr th:first-child{
    border-top-left-radius: 5px;
}
thead tr th:last-child{
    border-top-right-radius: 5px;
} */
tbody tr:nth-child(even){
    background-color: #eee;
    color: #5bbca9;
}
tbody tr:hover{
    background-color: #2e5d54;
}

/* Selector Practice */

/* This way effect on all p in products_1 */
.products_1 p{
    color: red;
}

/* This way effect on all p which is directly child of products_2 */
.products_2 > p{
    color: red;
}

/* This way effect on all p which is a sibling of products_3 */
.products_3 ~ p{
    color: red;
}

/* This way effect on first p which is a sibling of products_4 */
.products_4 + p{
    color: red;
}

/* attribute selector */
a[target]{
    color: green;
}
a[target="_blank"]{
    color: yellowgreen;
}

/* contains -->   *=  */
a[href*="fronthooks"]{
    font-size: 40px;
}
/* start with -->  ^= */
a[href^="https"]{
    font-weight: 900;
}
/* ends with -->  $=  */
a[href$=".ir"]{
    font-style: italic;
}

/* pseudo classes
    :first-child
    :last-child
    :first-of-type --> first child of each type
    :last-of-type  --> last child of each type
    :nth-child(even)
    :nth-child(2n)
    :nth-child(odd)
    :nth-child(2n+1)
    :nth-child(3n)

    :hover
    :visited
    :link
    :active
    :focus  --> when the link select by tab key
*/

.pseudo :first-child{
    color: red;
}
.pseudo :last-child{
    background-color: #2e5d54;
}
.pseudo :first-of-type{
    font-size: 40px;
}
.pseudo :last-of-type{
    font-style: italic;
}
.pseudo :nth-child(3n){
    border: 3px solid salmon;
}
.pseudo a:link{
    color: yellow;
}
.pseudo a:active{
    color: red;
}
.pseudo a:hover{
    background-color: yellowgreen;
}
.pseudo a:visited{
    color: purple;
}

/* pseudo element
    ::first-letter
    ::first-line
    ::after
    ::before
*/

.pseudo :last-child::first-letter{
    font-size: 280px;
}
.pseudo p:nth-child(2n)::first-line{
    font-size: 140px;
}
.pseudo :last-child::before{
    content: "...";
}
.pseudo :last-child::after{
    content: "...";
    font-size: 35px;
    color: #5bbca9;
}

/* selector specificity
    tag name is 001
    class name is 010
    id name is 100
    greater specificity show higher priority, you can break this rull by using !important key word but it's not recomended
    if an element has two classes its better to select it like this : ".class1.class2"
    its better to shorten your selectors, just using class and id, not long selectors like : "html body h2.class1 #id1" it's not recomended
*/

/* inheritance
    properties which is about colors and fonts are usually inherited from parent, if you want child doesn't affect by inheritance, simply set value of the inhrited property to initial
*/

/* colors:
    rgba(red, green, blue, opacity)
        red, green, blue : 0 - 255
        opacity : 0 - 1
    hsla(hue, saturation, lightness, opacity)
        hue is a circle of colors : 0 - 360
        saturation is color intensity : 0 - 100%
        lightness is brightness : 0 - 100%
    hex code
*/

/* gradient
    linear-gradient(direction, color1 instensity, color2 intensity)
    we can have more than 2 colors, intensity is not necessery
        direction : to top , to left, to right, to top left , ...
                    0deg, 45deg, 90deg , ...
        intensity : 0 - 100%
    radial-gradient(shape, color1 intensity, color2 intensity)
        shape : circle , ...
    
    after all its better to use cssgradient.io website
*/

/* border
    border : 1px solid black;
    border-width: 10px 20px 30px 40px;
*/
.messageBox{
    width: 300px;
    height: 100px;
    background-color: #babaff;
    border-left: 5px solid #50e22b;
    border-radius: 10px;
}
.box{
    width: 100px;
    height: 100px;
    background-color: #ebebf1;
    border: 2px solid #ccc;
    border-radius: 10px;
}

/* shadow --->  box-shadow   |   text-shadow
    (offset-X  offset-Y  blur spread  color)  --->   spread is not recommended a lot
 */
.box.boxshadow{
    background-color: gold;
    border: 0;
    box-shadow: 0 0 30px rgba(0,0,0,0.3);
}
.boxshadow > h2{
    color: #444;
    text-shadow: 3px 3px 5px rgba(0, 0, 0, 0.15);
    text-align: center;
}